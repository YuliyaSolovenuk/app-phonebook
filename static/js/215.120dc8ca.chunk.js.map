{"version":3,"file":"static/js/215.120dc8ca.chunk.js","mappings":"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","sources":["redux/selectors.js","components/filter/Filter.jsx","components/form/Form.jsx","components/contactList/ContactList.jsx","pages/Contacts.js"],"sourcesContent":["export const selectContacts = state => state.contactList.contacts;\nexport const selectError = state => state.contactList.error;\nexport const selectIsLoading = state => state.contactList.isLoading;\nexport const selectFilter = state => state.filter;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/selectors';\nimport { onFiltredContacts } from 'redux/filterSlice';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { value } = e.target;\n\n    dispatch(onFiltredContacts(value));\n  };\n\n  return (\n    <Box\n      component=\"div\"\n      sx={{\n        '& .MuiTextField-root': { m: 1, width: '35ch' },\n        textAlign: 'center',\n      }}\n    >\n      <TextField\n        id=\"outlined\"\n        label=\"Find contacts by name\"\n        multiline\n        maxRows={4}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={handleChange}\n        placeholder=\"Search contacts\"\n        autoComplete=\"on\"\n      />\n    </Box>\n  );\n};\n","import Notiflix from 'notiflix';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport { addContact } from 'redux/operations';\nimport { selectContacts } from 'redux/selectors';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\n\nNotiflix.Notify.init({\n  width: '320px',\n  position: 'center-top',\n  cssAnimationStyle: 'zoom',\n});\n\nexport function Form() {\n  const contacts = useSelector(selectContacts);\n\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const name = evt.currentTarget.elements.name.value.trim();\n    const number = evt.currentTarget.elements.number.value.trim();\n\n    const isIncludeName = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    const isIncludeNumber = contacts.find(contact => contact.number === number);\n\n    if (isIncludeName) {\n      Notiflix.Notify.warning(`${name} is already in contacts`);\n      return;\n    }\n\n    if (isIncludeNumber) {\n      Notiflix.Notify.warning(`${number} is already in contacts`);\n      return;\n    }\n\n    const contact = {\n      name,\n      number,\n    };\n\n    dispatch(addContact(contact));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Box component=\"div\" sx={{ textAlign: 'center' }}>\n      <Box\n        component=\"form\"\n        onSubmit={handleSubmit}\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          gap: '16px',\n          justifyContent: 'center',\n          alignItems: 'center',\n          '& .MuiTextField-root': { m: 1, width: '35ch' },\n          textAlign: 'center',\n        }}\n        noValidate\n        autoComplete=\"on\"\n      >\n        <TextField\n          id=\"outlined-name\"\n          label=\"Name\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={e => setName(e.target.value)}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          autoComplete=\"on\"\n          required\n        />\n        <TextField\n          id=\"outlined-tel\"\n          label=\"Number\"\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={e => setNumber(e.target.value)}\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          autoComplete=\"on\"\n          required\n        />\n\n        <Button\n          variant=\"outlined\"\n          size=\"large\"\n          type=\"submit\"\n          disabled={!name || !number}\n          sx={{ color: 'inherit', my: 2, '&:hover,:focus': { boxShadow: '2' } }}\n        >\n          Add contact\n        </Button>\n      </Box>\n    </Box>\n  );\n}\n","import IconButton from '@mui/material/IconButton';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemSecondaryAction from '@mui/material/ListItemSecondaryAction';\nimport ListItemText from '@mui/material/ListItemText';\n\n// import css from './ContactList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContactById } from 'redux/operations';\nimport { selectContacts, selectFilter } from 'redux/selectors';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filters = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const filteredContacts = contacts.filter(({ name }) =>\n    name.toLowerCase().includes(filters.toLowerCase())\n  );\n\n  return (\n    <List\n      sx={{ width: '100%', maxWidth: 480, overflow: 'auto', maxHeight: 440 }}\n    >\n      {filteredContacts.map(contact => {\n        return (\n          <ListItem key={contact.id} sx={{ textAlign: 'center', fontSize: 24 }}>\n            {contact.name}:&nbsp;\n            <ListItemText>{contact.number}</ListItemText>\n            <ListItemSecondaryAction>\n              <IconButton\n                type=\"button\"\n                edge=\"end\"\n                aria-label=\"delete\"\n                onClick={() => dispatch(deleteContactById(contact.id))}\n              >\n                <DeleteIcon fontSize=\"medium\" />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n};\n","import { useEffect } from 'react';\nimport { Filter } from 'components/filter/Filter';\nimport { Form } from 'components/form/Form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactList } from 'components/contactList/ContactList';\nimport { selectContacts, selectError, selectIsLoading } from 'redux/selectors';\nimport { fetchContacts } from 'redux/operations';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Box\n      component=\"div\"\n      sx={{\n        display: 'flex',\n        gap: '26px',\n        justifyContent: 'space-around',\n        alignItems: 'flex-start',\n        backgroundColor: 'hsla(190, 14%, 92%, 0.9)',\n        borderRadius: 3,\n        padding: 3,\n      }}\n    >\n      <Box component=\"div\">\n        <Typography variant=\"h3\" sx={{ my: 2, textAlign: 'center' }}>\n          Phonebook\n        </Typography>\n        <Form />\n      </Box>\n      <Box component=\"div\">\n        <Typography variant=\"h3\" sx={{ my: 2, textAlign: 'center' }}>\n          Contacts\n        </Typography>\n        <Filter />\n        {isLoading && <b>Loading contacts...</b>}\n        {error && <b>{error}</b>}\n        {contacts.length > 0 && <ContactList />}\n      </Box>\n    </Box>\n  );\n}\n"],"names":["selectContacts","state","contactList","contacts","selectError","error","selectIsLoading","isLoading","selectFilter","filter","Filter","useSelector","dispatch","useDispatch","Box","component","sx","m","width","textAlign","TextField","id","label","multiline","maxRows","type","name","value","onChange","e","target","onFiltredContacts","placeholder","autoComplete","Form","useState","setName","number","setNumber","onSubmit","evt","preventDefault","currentTarget","elements","trim","isIncludeName","find","contact","toLowerCase","isIncludeNumber","Notiflix","addContact","display","flexDirection","gap","justifyContent","alignItems","noValidate","pattern","title","required","Button","variant","size","disabled","color","my","boxShadow","position","cssAnimationStyle","ContactList","filters","filteredContacts","includes","List","maxWidth","overflow","maxHeight","map","ListItem","fontSize","ListItemText","ListItemSecondaryAction","IconButton","edge","onClick","deleteContactById","Delete","Contacts","useEffect","fetchContacts","backgroundColor","borderRadius","padding","Typography","length"],"sourceRoot":""}